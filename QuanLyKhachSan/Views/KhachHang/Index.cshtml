@model IEnumerable<QuanLyKhachSan.Model.KhachHang>

@{
    int currentPage = (int)ViewData["CurrentPage"];
    int totalPages = (int)ViewData["TotalPages"];
    int numberOfPagesToShow = 3; // Số trang trung gian bạn muốn hiển thị
}
@{
    ViewData["Title"] = "Khách hàng";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<style>

    .dataTables_wrapper .dataTables_length {
        float: left;
        margin-right: 20px;
    }

    .dataTables_wrapper .dataTables_filter {
        float: right;
    }

    .dataTables_length label {
        margin: 0;
    }

        .dataTables_length label select {
            display: inline;
            width: 80px;
        }
</style>

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">Khách hàng</h1>
    <a href="#" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm"><i class="fas fa-download fa-sm text-white-50"></i>Report</a>
</div>
<div class="row">


    <div class="col-md-9">
        <a class="btn btn-primary" asp-area="" asp-controller="KhachHang" asp-action="ThemKhachHang">Thêm Khách Hàng</a>
        <a type="button" class="btn btn-primary editButton" asp-action="ExportExcel" asp-controller="KhachHang">Excel</a>
        <a type="button" class="btn btn-primary editButton" asp-action="ExportPDF" asp-controller="KhachHang">PDF</a>

        <div class="row">
            <div class="col-sm-9" style="margin:20px 0 0 0;">
                <div class="dataTables_length" id="example_length">
                    <label>
                        Show:&nbsp;
                        <select name="example_length" aria-controls="example" class="form-control d-inline">
                            <option value="10">10</option>
                            <option value="25">25</option>
                            <option value="50">50</option>
                            <option value="100">100</option>
                        </select>
                    </label>
                </div>
            </div>
            <div class="col-sm-3" style="margin:20px 0 0 0; ">
                <input type="text" id="searchInput" class="form-control mb-3" placeholder="Tìm kiếm">
            </div>
        </div>
        <table class="table table-bordered table-hover" style="width:135%;">
            <thead>
                <tr style="font-size:.9em">
                    <!-- Define the table headers -->
                    <th class="text-center" width="auto">Mã KH</th>
                    <th class="text-center" width="auto">Tên KH</th>
                    <th class="text-center" width="auto">CCCD</th>
                    <th class="text-center" width="auto">Giới tính</th>
                    <th class="text-center" width="auto">Ngày sinh</th>
                    <th class="text-center" width="auto">Điện thoại</th>
                    <th class="text-center" width="auto">Địa chỉ</th>
                    <th class="text-center" width="auto">Ghi chú</th>
                    <th class="text-center" width="70px">Sửa</th>
                    <th class="text-center" width="70px">Xóa</th>
                </tr>
            </thead>
            <tbody style="font-size:.9em">
                <!-- Loop through each 'khachHang' in the Model -->
                @foreach (var khachHang in Model)
                {
                    <tr>
                        <!-- Display the properties of 'khachHang' -->
                        <td>@khachHang.MaKhachHang</td>
                        <td>@khachHang.TenKhachHang</td>
                        <td>@khachHang.CCCD</td> <!-- Added this line -->
                        <td>@khachHang.GioiTinh</td>
                        <td>@khachHang.NgaySinh.ToShortDateString()</td>
                        <td>@khachHang.DienThoai</td>
                        <td>@khachHang.DiaChi</td>
                        <td>@khachHang.GhiChu</td>

                        <!-- Edit button -->
                        <td><a type="button" class="btn btn-primary editButton" asp-action="SuaKhachHang" asp-route-id="@khachHang.MaKhachHang"><i class="bi bi-pencil"></i></a></td>


                        <!-- Delete button with confirmation -->
                        @using (Html.BeginForm("XoaKhachHang", "KhachHang", new { id = khachHang.MaKhachHang }, FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            <td>
                                <button type="submit" class="btn btn-primary" onclick="return confirm('Are you sure you want to delete this item?');">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>


    </div>

</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>


<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-end">
        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1 })" tabindex="-1">Previous</a>
        </li>
        @if (totalPages <= numberOfPagesToShow)
        {
            // Hiển thị tất cả các trang nếu tổng số trang nhỏ hơn hoặc bằng số trang trung gian
            for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                </li>
            }
        }
        else
        {
            // Hiển thị một số trang trung gian và tạo nút "..." để bỏ qua các trang còn lại
            int startPage = Math.Max(currentPage - (numberOfPagesToShow / 2), 1);
            int endPage = Math.Min(startPage + numberOfPagesToShow - 1, totalPages);

            if (startPage > 1)
            {
                <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { page = 1 })">1</a></li>
                if (startPage > 2)
                {
                    <li class="page-item disabled"><a class="page-link" href="#">...</a></li>
                }
            }

            for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                </li>
            }

            if (endPage < totalPages)
            {
                if (endPage < totalPages - 1)
                {
                    <li class="page-item disabled"><a class="page-link" href="#">...</a></li>
                }
                <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { page = totalPages })">@totalPages</a></li>
            }
        }

        <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1 })">Next</a>
        </li>
    </ul>
</nav>


