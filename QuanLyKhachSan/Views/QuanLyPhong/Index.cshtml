@model IEnumerable<QuanLyKhachSan.Model.Room>
@{
    ViewData["Title"] = "Quản Lý Phòng";
}
@{
    int currentPage = (int)ViewData["CurrentPage"];
    int totalPages = (int)ViewData["TotalPages"];
    int numberOfPagesToShow = 3; // Số trang trung gian bạn muốn hiển thị
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
<link rel="stylesheet" href="~/css/QuanLyPhong.css" />
<link rel="stylesheet" href="~/css/css-min-all.css" />


<div class="row">
    <div class="col-md-2">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title">Tìm kiếm</h5>
            </div>
            <form method="get" asp-controller="KhachHang" asp-action="Index">
                <div class="card-body">
                    <div class="form-group">
                        <input type="text" class="form-control" id="searchText" name="searchText" placeholder="Nhập từ khóa">
                    </div>
                    <button type="submit" class="btn btn-primary">Tìm kiếm</button>
                </div>
            </form>
        </div>


    </div>
    <div class="col-md-10">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Mã Phòng</th>
                    <th>Khu Vực</th>
                    <th>Hạng Phòng</th>
                    <th>Giá Theo Giờ</th>
                    <th>Giá Theo Qua Đêm</th>
                    <th>Giá Theo Ngày</th>
                    <th>Trạng Thái</th>
                    <th width="70px">Sửa</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var phong in Model)
                {
                    <tr>
                        <td>@phong.MaPhong</td>
                        <td>@phong.KhuVuc</td>
                        <td>@phong.HangPhong</td>
                        <td>@phong.GiaTheoGio</td>
                        <td>@phong.GiaTheoQuaDem</td>
                        <td>@phong.GiaTheoNgay</td>
                        <td>@phong.TrangThai</td>

                        <td><a type="button" class="btn btn-primary editButton" asp-action="SuaPhong" asp-route-id="@phong.MaPhong"><i class="bi bi-pencil"></i></a></td>


                    </tr>
                }
            </tbody>
        </table>
        <nav aria-label="Page navigation example" style="position:absolute;right:100px;bottom:100px;">
            <ul class="pagination justify-content-end">
                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1 })" tabindex="-1">Previous</a>
                </li>
                @if (totalPages <= numberOfPagesToShow)
                {
                    // Hiển thị tất cả các trang nếu tổng số trang nhỏ hơn hoặc bằng số trang trung gian
                    for (int i = 1; i <= totalPages; i++)
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                        </li>
                    }
                }
                else
                {
                    // Hiển thị một số trang trung gian và tạo nút "..." để bỏ qua các trang còn lại
                    int startPage = Math.Max(currentPage - (numberOfPagesToShow / 2), 1);
                    int endPage = Math.Min(startPage + numberOfPagesToShow - 1, totalPages);

                    if (startPage > 1)
                    {
                        <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { page = 1 })">1</a></li>
                        if (startPage > 2)
                        {
                            <li class="page-item disabled"><a class="page-link" href="#">...</a></li>
                        }
                    }

                    for (int i = startPage; i <= endPage; i++)
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                        </li>
                    }

                    if (endPage < totalPages)
                    {
                        if (endPage < totalPages - 1)
                        {
                            <li class="page-item disabled"><a class="page-link" href="#">...</a></li>
                        }
                        <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { page = totalPages })">@totalPages</a></li>
                    }
                }

                <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1 })">Next</a>
                </li>
            </ul>
        </nav>

    </div>
</div>